openapi: 3.0.3
info:
  title: Claerance
  description: Claerance
  version: 1.0.0
  license:
    name: MIT
servers:
  - url: 'http://localhost:8080/api'

paths:
  /auth:
    get:
      tags:
        - auth
      summary: "Authenticate to clearance"
      responses:
        200:
          description: "Authentication successful"
        303:
          description: "Authentication unsuccessful, redirecting to login page."

  /session:
    post:
      tags:
        - session
      summary: "Login and create new session"
      responses:
        201:
          description: "Session created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        403:
          description: "Not authorized"
    delete:
      tags:
        - session
      summary: "Delete current session"
      responses:
        200:
          description: "Session deleted"
  /session/{id}:
    delete:
      tags:
        - session
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      summary: "Delete session by id"
      responses:
        200:
          description: "Session deleted"

  /user/list:
    get:
      tags:
        - user
      responses:
        200:
          description: "Get list of all users"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        401:
          description: "No authorisation provided"
        403:
          description: "Not authorized"
  /user/{id}:
    get:
      tags:
        - user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: "Get detailed information about user"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: "No user with this id found"
    put:
      tags:
        - user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: "User info successfully updated"
        404:
          description: "No user with this id found"
    delete:
      tags:
        - user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: "User successfully deleted"
        404:
          description: "No user with this id found"
  /user/create:
    post:
      tags:
        - user
      responses:
        201:
          description: "User successfully created"

  /site/list:
    get:
      tags:
        - site
      responses:
        200:
          description: "List all sites known to claerance"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Site'
  /site/{id}:
    get:
      tags:
        - site
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: "Get detailed information about a site"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
        404:
          description: "No site with this id was found"
    put:
      tags:
        - site
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: "Update information about a site"
        404:
          description: "No site with this id was found"
    delete:
      tags:
        - site
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        204:
          description: "Delete site"
        404:
          description: "No site with this id was found"
  /site/{id}/authorized:
    get:
      tags:
        - site
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: "Get list of authorized entities"
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  roles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'


        404:
          description: "No site with this id was found"

components:
  schemas:
    Overview:
      required:
        - users
        - sites
      properties:
        users:
          type: object
          properties:
            totalNumber:
              type: number
        sites:
          type: object
          properties:
            totalNumber:
              type: number
            registered:
              type: number
            unregistered:
              type: number

    Session:
      required:
        - userId
        - isValid
        - username
      properties:
        userId:
          type: integer
        isValid:
          type: boolean
        username:
          type: string

    User:
      required:
        - ID
      properties:
        ID:
          type: integer
        CreatedAt:
          type: string
        UpdatedAt:
          type: string
        DeletedAt:
          type: string
        Username:
          type: string
        Email:
          type: string
        TelegramId:
          type: integer

    Role:
      required:
        - ID
      properties:
        ID:
          type: integer
        Name:
          type: string
        Users:
          type: array
          items:
            $ref: '#/components/schemas/User'

    Group:
      required:
        - ID
      properties:
        ID:
          type: integer
        Name:
          type: string
        Users:
          type: array
          items:
            $ref: '#/components/schemas/User'

    Site:
      required:
        - ID
      properties:
        ID:
          type: integer
        Name:
          type: string
        Url:
          type: string
        FirstContact:
          type: string
        LastContact:
          type: string
